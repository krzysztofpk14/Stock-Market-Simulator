<?xml version="1.0" encoding="utf-8"?>
<!--
		FIXML Schema Version FIX.Latest EP296

		Generated: 2025-04-15T04:06:24.5290136-04:00

		Copyright(c) FIX Protocol Limited. All rights reserved.

        Comments and errors should be posted on the FIX Protocol web-site https://www.fixtrading.org/
		-->
<xs:schema xmlns="http://www.fixprotocol.org/FIXML-Latest"
           xmlns:fixr="http://fixprotocol.io/2020/orchestra/repository"
           xmlns:fm="http://www.fixprotocol.org/FIXML-Latest/METADATA"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://www.fixprotocol.org/FIXML-Latest/METADATA fixml-metadata-Latest.xsd"
           targetNamespace="http://www.fixprotocol.org/FIXML-Latest"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">
   <xs:simpleType name="Length">
      <xs:annotation>
         <xs:documentation>
                        int field representing the length in bytes. Value must be positive.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:nonNegativeInteger"/>
   </xs:simpleType>
   <xs:simpleType name="TagNum">
      <xs:annotation>
         <xs:documentation>
                        int field representing a tag number. Value must be positive and may not contain leading zeros.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:nonNegativeInteger"/>
   </xs:simpleType>
   <xs:simpleType name="SeqNum">
      <xs:annotation>
         <xs:documentation>
                        int field representing a message sequence number. Value must be positive.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:positiveInteger"/>
   </xs:simpleType>
   <xs:simpleType name="DayOfMonth">
      <xs:annotation>
         <xs:documentation>
                        int field representing a day during a particular month (values 1 to 31).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:integer"/>
   </xs:simpleType>
   <xs:simpleType name="Qty">
      <xs:annotation>
         <xs:documentation>
                        float field capable of storing either a whole number (no decimal places) of "shares" (securities denominated in whole units) or a decimal value containing decimal places for non-share quantity asset classes (securities denominated in fractional units).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:decimal"/>
   </xs:simpleType>
   <xs:simpleType name="Price">
      <xs:annotation>
         <xs:documentation>
                        float field representing a price. Note the number of decimal places may vary. For certain asset classes prices may be negative values. For example, prices for options strategies can be negative under certain market conditions. Refer to Volume 7: FIX Usage by Product for asset classes that support negative price values.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:decimal"/>
   </xs:simpleType>
   <xs:simpleType name="PriceOffset">
      <xs:annotation>
         <xs:documentation>
                        float field representing a price offset, which can be mathematically added to a "Price". Note the number of decimal places may vary and some fields such as LastForwardPoints may be negative.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:decimal"/>
   </xs:simpleType>
   <xs:simpleType name="Amt">
      <xs:annotation>
         <xs:documentation>
                        float field typically representing a Price times a Qty</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:decimal"/>
   </xs:simpleType>
   <xs:simpleType name="Percentage">
      <xs:annotation>
         <xs:documentation>
                        float field representing a percentage (e.g. 0.05 represents 5% and 0.9525 represents 95.25%). Note the number of decimal places may vary.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:decimal"/>
   </xs:simpleType>
   <xs:simpleType name="char">
      <xs:annotation>
         <xs:documentation>
                        Single character value, can include any alphanumeric character or punctuation except the delimiter. All char fields are case sensitive (i.e. m != M).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
   <xs:simpleType name="Boolean">
      <xs:annotation>
         <xs:documentation>
                        char field containing one of two values: 
                        'Y' = True/Yes 
                        'N' = False/No</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value="[YN]{1}"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="MultipleCharValue">
      <xs:annotation>
         <xs:documentation>
                        string field containing one or more space delimited single character values (e.g. |18=2 A F| ).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value="[A-Za-z0-9](\s[A-Za-z0-9])*"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="MultipleStringValue">
      <xs:annotation>
         <xs:documentation>
                        string field containing one or more space delimited multiple character values (e.g. |277=AV AN A| ).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".+(\s.+)*"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Country">
      <xs:annotation>
         <xs:documentation>
                        string field representing a country using ISO 3166 Country code (2 character) values (see Appendix 6-B).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".{2}"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Currency">
      <xs:annotation>
         <xs:documentation>
                        string field representing a currency type using ISO 4217 Currency code (3 character) values (see Appendix 6-A).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".{3}"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Exchange">
      <xs:annotation>
         <xs:documentation>
                        string field representing a market or exchange using ISO 10383 Market Identifier Code (MIC) values (see"Appendix 6-C).</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value=".*"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="MonthYear">
      <xs:annotation>
         <xs:documentation>
                        string field representing month of a year. An optional day of the month can be appended or an optional week code. 
                        Valid formats: 
                        YYYYMM 
                        YYYYMMDD 
                        YYYYMMWW 
                        Valid values: 
                        YYYY = 0000-9999; MM = 01-12; DD = 01-31; WW = w1, w2, w3, w4, w5.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value="\d{4}(0|1)\d([0-3wW]\d)?"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="UTCTimestamp">
      <xs:annotation>
         <xs:documentation>
                        string field representing date and time combination Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT). 
                        Its value space is described as the combination of date and time of day in the Chapter 5.4 of ISO 8601. 
                        Valid values are in the format YYYY-MM-DDTHH:MM:SS.s where YYYY = 0000-9999 year, MM = 01-12 month, DD = 01-31 day, HH = 00-23 hour, MM = 00-59 minute, SS = 00-60 second (60 only if UTC leap second), and optionally one or more digits representing a decimal fraction of a second. 
                        The punctuation of "-", ":" and the string value of "T" to separate the date and time are required. The "." is only required when sub-second time precision is specified. 
                        Leap Seconds: Note that UTC includes corrections for leap seconds, which are inserted to account for slowing of the rotation of the earth. Leap second insertion is declared by the International Earth Rotation Service (IERS) and has, since 1972, only occurred on the night of Dec. 31 or Jun 30. The IERS considers March 31 and September 30 as secondary dates for leap second insertion, but has never utilized these dates. During a leap second insertion, a UTCTimestamp field may read "1998-12-31T23:59:59", "1998-12-31T23:59:60", "1999-01-01T00:00:00". (see http://tycho.usno.navy.mil/leapsec.html)</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:dateTime"/>
   </xs:simpleType>
   <xs:simpleType name="UTCTimeOnly">
      <xs:annotation>
         <xs:documentation>
                        string field representing time-only in Universal Time Coordinated (UTC), also known as Greenwich Mean Time (GMT). 
                        Its value space is described as the time of day in the Chapter 5.4 of ISO 8601. 
                        Valid values are in the format HH:MM:SS.s where HH = 00-23 hours, MM = 00-59 minutes, SS = 00-60 seconds (60 only if UTC leap second), and optionally s (one or more digits representing a decimal fraction of a second). 
                        The punctuation of ":" between hours minutes and seconds are required. The "." is only required when sub-second time precision is specified. 
                        This special-purpose field is paired with UTCDateOnly to form a proper UTCTimestamp for bandwidth-sensitive messages.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:time"/>
   </xs:simpleType>
   <xs:simpleType name="UTCDateOnly">
      <xs:annotation>
         <xs:documentation>
                        string field representing Date represented in UTC (Universal Time Coordinated, also known as GMT) in YYYY-MM-DD format specified in ISO 8601. This special-purpose field is paired with UTCTimeOnly to form a proper UTCTimestamp for bandwidth-sensitive messages. 
                        Valid values: 
                        YYYY = 0000-9999, MM = 01-12, DD = 01-31.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:date"/>
   </xs:simpleType>
   <xs:simpleType name="LocalMktDate">
      <xs:annotation>
         <xs:documentation>
                        string field representing a Date of Local Market (as opposed to UTC) in YYYY-MM-DD format. This is the "normal" date field used by the FIX Protocol. 
                        Valid values: 
                        YYYY = 0000-9999, MM = 01-12, DD = 01-31.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:date"/>
   </xs:simpleType>
   <xs:simpleType name="Tenor">
      <xs:annotation>
         <xs:documentation>
                        used to allow the expression of FX standard tenors in addition to the base valid enumerations defined for the field that uses this pattern data type. This pattern data type is defined as follows: 
                        Dx = tenor expression for "days", e.g. "D5", where "x" is any integer &gt; 0 
                        Mx = tenor expression for "months", e.g. "M3", where "x" is any integer &gt; 0 
                        Wx = tenor expression for "weeks", e.g. "W13", where "x" is any integer &gt; 0 
                        Yx = tenor expression for "years", e.g. "Y1", where "x" is any integer &gt; 0</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:string">
         <xs:pattern value="[DMWY](\d)+"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Reserved100Plus">
      <xs:annotation>
         <xs:documentation>
                        Values "100" and above are reserved for bilaterally agreed upon user defined enumerations.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:integer">
         <xs:minInclusive value="100"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Reserved1000Plus">
      <xs:annotation>
         <xs:documentation>
                        Values "1000" and above are reserved for bilaterally agreed upon user defined enumerations.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:integer">
         <xs:minInclusive value="1000"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="Reserved4000Plus">
      <xs:annotation>
         <xs:documentation>
                        Values "4000" and above are reserved for bilaterally agreed upon user defined enumerations.</xs:documentation>
      </xs:annotation>
      <xs:restriction base="xs:integer">
         <xs:minInclusive value="4000"/>
      </xs:restriction>
   </xs:simpleType>
   <xs:simpleType name="XMLData">
      <xs:annotation>
         <xs:documentation/>
      </xs:annotation>
      <xs:restriction base="xs:string"/>
   </xs:simpleType>
</xs:schema>
